#!/usr/bin/python3

import amulet
import openvim

def deploy_openvim(with_relations=True):
    d = amulet.Deployment()
    d.add("mysql", series="trusty")
    d.add("openvim-controller", series="xenial")
    d.add("openvim-compute", charm="local:xenial/openvim-compute", series="xenial")
    if with_relations:
        d.relate("openvim-controller:db", "mysql:db")
        d.relate("openvim-controller:compute", "openvim-compute:compute")
    d.expose("openvim-controller")
    d.setup(timeout=900)
    d.sentry.wait()
    return d

def get_first_unit_status(deployment, service):
    service_status = deployment.sentry.get_status()["openvim-controller"]
    unit_status = next(iter(service_status.values()))
    return unit_status

def test_controller_blocks_without_mysql():
    d = deploy_openvim(with_relations=False)
    unit_status = get_first_unit_status(d, "openvim-controller")
    workload_status = unit_status["workload-status"]
    assert(workload_status["current"] == "blocked")
    assert(workload_status["message"] == "mysql database required")

def test_add_compute_node():
    d = deploy_openvim()
    d.add_unit("openvim-compute")
    d.sentry.wait(timeout=900)
    # TODO: validate host count

if __name__ == "__main__":
    test_controller_blocks_without_mysql()
    test_add_compute_node()
